[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "msiconvert"
version = "1.8.3"
description = "A library to convert Mass Spectrometry Imaging (MSI) data into SpatialData/Zarr format"
authors = ["Theodoros Visvikis <t.visvikis@maastrichtuniversity.nl>"]
maintainers = ["Theodoros Visvikis <t.visvikis@maastrichtuniversity.nl>"]
license = "MIT"
readme = "README.md"
homepage = "https://github.com/Tomatokeftes/MSIConverter"
repository = "https://github.com/Tomatokeftes/MSIConverter"
documentation = "https://github.com/Tomatokeftes/MSIConverter#readme"
keywords = [
    "mass-spectrometry",
    "imaging",
    "spatialdata",
    "zarr",
    "omics",
    "bioinformatics",
    "msi",
    "imzml",
    "bruker",
    "spatial-omics",
    "data-conversion",
    "scientific-computing"
]

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Medical Science Apps.",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: File Formats",
    "Typing :: Typed",
    "Environment :: Console",
]
packages = [{include = "msiconvert"}]

[tool.poetry.urls]
"Bug Tracker" = "https://github.com/Tomatokeftes/MSIConverter/issues"
"Discussions" = "https://github.com/Tomatokeftes/MSIConverter/discussions"
"Changelog" = "https://github.com/Tomatokeftes/MSIConverter/blob/main/CHANGELOG.md"
"Contributing" = "https://github.com/Tomatokeftes/MSIConverter/blob/main/CONTRIBUTING.md"

[tool.poetry.dependencies]
python = ">=3.10, <3.13"

dask = ">=2023.0.0"
geopandas = ">=0.9.0"
lxml = ">=4.6.0"
numpy = ">=1.20.0"
pandas = ">=1.3.0"
pyimzML = ">=1.4.0"
scipy = ">=1.7.0"
Shapely = ">=1.8.0"
spatialdata = "0.5.0" # Example: updated to a newer working version
tqdm = ">=4.50.0"
zarr = ">=2.10.0"
cryptography = "^45.0.5"

anndata = ">=0.9.0"

[tool.poetry.group.test.dependencies]
pytest = ">=7.0.0"
pytest-cov = ">=4.0.0"
mock = ">=4.0.0"

[tool.poetry.group.dev.dependencies]
black = ">=23.0.0"
isort = ">=5.12.0"
flake8 = ">=6.0.0"
mypy = ">=1.0.0"
pydocstyle = ">=6.3.0"
python-semantic-release = "*"
python-dotenv = "^1.1.1"
pre-commit = ">=3.0.0"
bandit = {extras = ["toml"], version = ">=1.7.0"}
types-requests = ">=2.25.0"
types-PyYAML = ">=6.0.0"

[tool.poetry.scripts]
msiconvert = "msiconvert.__main__:main"
msiconvert-check-ontology = "msiconvert.tools.check_ontology:main"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
markers = [
    "unit: marks tests as unit tests (fast, no external dependencies)",
    "integration: marks tests as integration tests (may be slow, may require external dependencies)"
]
addopts = "-v --tb=short -m \"not integration\""
filterwarnings = [
    "ignore::DeprecationWarning:pkg_resources.*:",
    "ignore::DeprecationWarning:xarray_schema.*:",
    "ignore::UserWarning:spatialdata.models.models:1053"
]

# =============================================================
# === SEMANTIC RELEASE CONFIGURATION                         ===
# =============================================================
[tool.semantic_release]
version_toml = ["pyproject.toml:tool.poetry.version"]
version_variables = [
    "msiconvert/__init__.py:__version__",
]
build_command = "pip install build && python -m build"
upload_to_vcs_release = true

[tool.semantic_release.branches.main]
match = "main"
prerelease = false

[tool.semantic_release.changelog]
template_dir = "templates"
changelog_file = "CHANGELOG.md"
exclude_commit_patterns = [
    "chore*",
    "ci*",
]

[tool.semantic_release.commit_parser_options]
allowed_tags = ["build", "chore", "ci", "docs", "feat", "fix", "perf", "style", "refactor", "test"]
minor_tags = ["feat"]
patch_tags = ["fix", "perf"]

[tool.semantic_release.remote_settings]
name = "origin"
token = { env = "GITHUB_TOKEN" }

# =============================================================
# === CODE QUALITY TOOL CONFIGURATIONS                     ===
# =============================================================

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601", "B603", "B607"]  # Allow assert statements, shell usage, and subprocess calls with controlled input

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # Set to true once types are added
disallow_incomplete_defs = false  # Set to true once types are added
check_untyped_defs = true
disallow_untyped_decorators = false  # Set to true once types are added
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "pyimzml.*",
    "spatialdata.*",
    "anndata.*",
    "zarr.*",
    "dask.*",
    "geopandas.*",
    "shapely.*",
]
ignore_missing_imports = true


[tool.pydocstyle]
convention = "google"
add_ignore = ["D100", "D104", "D105"]  # Missing docstrings in modules, packages, and magic methods
